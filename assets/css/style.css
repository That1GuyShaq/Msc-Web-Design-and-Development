html {
  scroll-behavior: smooth;
}

/* Hide the dropdown indicator in navigation items with a dropdown */
.nav-item.dropdown > a::after {
  content: none; /* Hide the dropdown indicator */
}

/* Display the dropdown menu when hovering over the parent dropdown */
.dropdown:hover .dropdown-menu {
  display: block;
}

/* Custom styling for the active dropdown menu */
.active-dropdown {
  --bs-bg-opacity: 1; /* Set the background opacity to 1 */
  --bs-text-opacity: 1; /* Set the text opacity to 1 */
  opacity: 0.75 !important; /* Reduce overall opacity to 0.75 with importance */
  color: rgba(var(--bs-light-rgb), var(--bs-text-opacity)) !important; /* Text color with light RGB values and custom text opacity */
  background-color: rgba(var(--bs-primary-rgb), var(--bs-bg-opacity)) !important; /* Background color with primary RGB values and custom background opacity */
}

/* Style for the back-to-top button */
#back-to-top {
  z-index: 1000; /* Set the stacking order to 1000, making it appear above other elements */
}

/* Hover effect for the back-to-top button */
#back-to-top:hover {
  opacity: 75% !important; /* Increase opacity to 75% when the button is hovered over with importance */
}

.horizontal-divider {
  width: 100%; /*Set the width to 100% the with of the container */
  --bs-bg-opacity: 1; /* Set the background opacity to 1 */
  background-color: rgba(var(--bs-secondary-rgb), var(--bs-bg-opacity)) !important; /* Background color with secondary RGB values and custom background opacity */
}

.title-bar {
  height: 75vh; /* Set the height to 20% of the viewport height */
  border: none; /* Remove the default border*/
  margin-bottom: 5vh;
}

.title-bar img {
  width: 100%; /* Make the image take 100% of the container's width */
  height: 100%; /* Make the image take 100% of the container's height */
  object-fit: cover; /* Crop the image to cover the entire container, maintaining aspect ratio */
}

.flip-y {
  transform: scaleY(-1); /* Flip the image vertically */
}

.flip-x {
  transform: scaleX(-1); /* Flip the image horizontally */
}

.text-accent {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-accent-rgb), var(--bs-text-opacity)) !important;
}

.link-accent {
  color: #DB7633;
}
.link-accent:hover, .link-accent:focus {
  color: #d05b0d;
}

@font-face{
  font-family: slabo;
  src: url(../fonts/Slabo27px-Regular.ttf);
}

.title-font {
  font-size: 100px;
  font-weight: bolder;
}

.font-slabo {
  font-family: slabo;
}

.border-accent {
  border-color: var(--bs-accent) !important;
}

.parallax {
  /* The image used */
  background-image: url("../images/study_hall.jpg");

  /* Set a specific height */
  min-height: 250px;

  /* Create the parallax scrolling effect */
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;

  /* Position the pseudo-element and set styles for the overlay */
  position: relative;
}

/* Create an overlay */
.parallax::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.1); /* Adjust the opacity here */
  /* Optionally, use clip-path for a custom shape */
  clip-path: polygon(0% 0%, 83% 0%, 36% 100%, 0% 100%);

   /* Disable pointer events on the overlay */
   pointer-events: none;
}

.z-7 {
  z-index: 7;
}

.z-8 {
  z-index: 8;
}

.z-9 {
  z-index: 9;
}

.z-10 {
  z-index: 10;
}

.modal-body img {
  max-width: auto; /* Set maximum width to 100% of the modal body */
  max-height: 100vh; /* Set maximum height to 80% of the viewport height */
  display: block; /* Ensure the image behaves as a block element */
  margin: 0 auto; /* Center the image horizontally */
}